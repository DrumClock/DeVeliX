### info : gcode_macro M106 
# variable_fan_index: ['fan', 'fan1', 'fan2', 'fan3', 'fan4', 'fan5']
# variable_active_fan: 0

###############################################################
#         Define LCD menu  "Fans settings"  in User settings
################################################################
#  >>>> default menu for config [fan]  - Print cooling fan <<<<
# Main
# ...
#   + User settings
#    ...  
#       + Fan: OFF
#       + Fan speed: 000%

# >>>>>>>>>>  if redefine "gcode_macro M106" in printer   <<<<<<<<<<<<<
# >>>>  menu for config [fan_generic] - users define fan functions <<<<

# Main
# ...   
#   + User settings
#     + Fans settings
#        + Active FAN: <config_name>
#        + Fan: ON/OFF
#        + Fan speed: 0-100%
#        + All Fans OFF   

# ==================== Fans settings menu ==============================================

### Fans settings
[menu __main __user __fansettings]
type: list
index: 5
# enable: {'fan_generic' in printer}
enable: { 'gcode_macro M106' in  printer } 
name: Fans 



### Active FAN
[menu __main __user __fansettings __activefan]
type: input
name:  {"[P%s] : %s" %  (menu.input|int, printer["gcode_macro M106"].fan_index[menu.input|int])}
input: {printer["gcode_macro M106"].active_fan}
input_min: 0
input_max: {printer["gcode_macro M106"].fan_index|length-1} 
input_step: 1
gcode: 
        SET_GCODE_VARIABLE MACRO=M106 VARIABLE=active_fan  VALUE={menu.input|int} 



### Fan: ON/OFF
[menu __main __user __fansettings __fanonoff]
type: command
name: Fan: {'OFF' if printer[("fan_generic %s" % (printer["gcode_macro M106"].fan_index[printer["gcode_macro M106"].active_fan])) ].speed  else 'ON' }
gcode:

   {% set status = 'OFF' if printer[("fan_generic %s" % (printer["gcode_macro M106"].fan_index[printer["gcode_macro M106"].active_fan]))].speed  else 'ON' %}
   {% set turn = 255  if status == 'ON'  else 0 %} 

    M106 S{turn|int} P{printer["gcode_macro M106"].active_fan}


### Fan speed: 0-100%
[menu __main __user __fansettings __fanspeed]
type: input
name: Fan speed: {'%3d' % (menu.input*100)}%
input: {printer[ ("fan_generic %s" % (printer["gcode_macro M106"].fan_index[printer["gcode_macro M106"].active_fan])) ].speed}
input_min: 0
input_max: 1
input_step: 0.01
gcode:
    M106 S{'%d' % (menu.input*255)} P{printer["gcode_macro M106"].active_fan}

### All Fans OFF 
[menu __main __user __fansettings __allfansoff]
type: command
name: All Fans OFF
gcode:

 {% set total =printer["gcode_macro M106"].fan_index|length  %}
   {% for n in range(total) %} 
      M106 S0 P{n}
   {% endfor %}

