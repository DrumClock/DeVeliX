#####################################################################
#  Variable for this configurations
#  ATTENTION: If the variable already exists it will be overwritten!
#####################################################################

[gcode_macro VARIABLE]
gcode:

variable_offset_temp: { 'extruder': 0, 'extruder1': 0 }    # default

##########################################################
#
#  Add this to [delayed_gcode _INIT]:
#
#  {% if printer['gcode_macro M104'] %}  
#    ## Creating a list of variables 
#    _INIT_M104
#  {% endif %}
#
##########################################################

##########################################################
# Creating a list of variables from the 
# configuration after restarting FW Klipper 
##########################################################

[gcode_macro _INIT_M104]
gcode:

   {% set user_vars = printer["gcode_macro VARIABLE"] %}   
   {% set offset_temp = user_vars. offset_temp %}
  
   {% for tool in printer.heaters.available_heaters|sort %} ; check for all available heaters  
    {% if 'extruder' in tool %}
      {% set _dummy = offset_temp.update({tool: 0}) %}      
    {% endif %}
  {% endfor %}
  SET_GCODE_VARIABLE MACRO=VARIABLE VARIABLE=offset_temp VALUE="{offset_temp}"
  {action_respond_info("Creating a list of variables for macro M104 ")}

##########################################################
# PRINTER HEATERS MANAGEMENT 
# Redefine G-code command M104 and M109 
##########################################################

[gcode_macro M104]
rename_existing: M104.1
description: Overide "M104" to allow multiple extruders
gcode:

    {% set user_vars = printer["gcode_macro VARIABLE"] %}   
    {% set target_tool = params.T|default(user_vars.active_tool)|int %}
    {% set temp = params.S|default(0)|float %} 
    ###
     
 {% if user_vars.default_t_extruder |length  <  target_tool + 1 %}
     {action_respond_info("The tool T%s is not defined for extruder." % (target_tool))} 
 {% else %}
   {% set default_heater = user_vars.default_t_extruder[target_tool] %}
        
    ###
    {% set target_offset = user_vars.offset_temp[default_heater]  if temp != 0 else 0 %}

    {% if temp == 0 %}
       ### reset variable offset_temp
         {% set _dummy = user_vars.offset_temp.update({default_heater : 0}) %} 
        
        SET_GCODE_VARIABLE MACRO=VARIABLE VARIABLE=offset_temp VALUE="{user_vars.offset_temp}"
     {% endif %}
    
    {% if user_vars.mode_605 in [2,3] %}  ### Duplication, Mirrored mode
       ### set temp for M605 S2/S3 mode   
       SET_HEATER_TEMPERATURE HEATER="{default_heater}" TARGET={temp + target_offset} 
       ### sync heaters 
         {% if printer['gcode_macro SET_SYNC_HEATERS_MODE'] is defined %}   
           SET_SYNC_HEATERS_MODE  WAIT=0
         {% endif %}  
    {% else %}
      SET_HEATER_TEMPERATURE HEATER="{default_heater}" TARGET={temp + target_offset} 
    {% endif %}
  {% endif %}
#####################################################################

[gcode_macro M109]
rename_existing: M109.1
description: Overide "M109" to allow multiple extruders
gcode:

    {% set user_vars = printer["gcode_macro VARIABLE"] %} 
    {% set target_tool = params.T|default(user_vars.active_tool)|int %}
    {% set temp = params.S|default(0)|float %}

 {% if user_vars.default_t_extruder |length  <  target_tool + 1 %}
     {action_respond_info("The tool T%s is not defined for extruder." % (target_tool))} 
 {% else %}

    ### accepted R from Marlin G-code
    {% if params.R is defined %}  
      {% set temp = params.R|default(0)|float %}
    {% endif %}  
 
 {% if temp !=0 %}
    
 {% set default_heater =user_vars.default_t_extruder[target_tool] %}
    
    {% if user_vars.mode_605 in [2,3] %}  ### Duplication, Mirrored mode    
       ### set temp for M605 S2/S3 mode
       SET_HEATER_TEMPERATURE HEATER="{default_heater}" TARGET={temp}
       SET_SYNC_HEATERS_MODE   WAIT=1          
    {% else %}
       SET_HEATER_TEMPERATURE HEATER="{default_heater}" TARGET={temp}
       TEMPERATURE_WAIT SENSOR="{default_heater}" MINIMUM={temp - 2.0} MAXIMUM={temp + 2.0}    

    {% endif %}
 {% endif %} 
 {% endif %} 


#####################################################################

[gcode_macro M109]
rename_existing: M109.1
description: Overide "M109" to allow multiple extruders
gcode:

    {% set user_vars = printer["gcode_macro VARIABLE"] %} 
    {% set target_tool = params.T|default(user_vars.active_tool)|int %}
    {% set temp = params.S|default(0)|float %}

 {% if user_vars.default_t_extruder |length  <  target_tool + 1 %}
     {action_respond_info("The tool T%s is not defined for extruder." % (target_tool))} 
 {% else %}

    ### accepted R from Marlin G-code
    {% if params.R is defined %}  
      {% set temp = params.R|default(0)|float %}
    {% endif %}  
 
 {% if temp !=0 %}
    
 {% set default_heater =user_vars.default_t_extruder[target_tool] %}
    
    {% if user_vars.mode_605 in [2,3] %}  ### Duplication, Mirrored mode    
       ### set temp for M605 S2/S3 mode
       SET_HEATER_TEMPERATURE HEATER="{default_heater}" TARGET={temp}
       ### sync heaters 
            {% if printer['gcode_macro SET_SYNC_HEATERS_MODE'] is defined %}   
             SET_SYNC_HEATERS_MODE  WAIT=1 
            {% endif %}          
    {% else %}
       SET_HEATER_TEMPERATURE HEATER="{default_heater}" TARGET={temp}
       TEMPERATURE_WAIT SENSOR="{default_heater}" MINIMUM={temp - 2.0} MAXIMUM={temp + 2.0}    

    {% endif %}
 {% endif %} 
 {% endif %} 
#####################################################################

# default_t_extruder = {0: 'extruder', 1: 'extruder1', 2: 'extruder2', 3: 'extruder3'}


[gcode_macro SET_TEMP_OFFSET]
description: SET_TEMP_OFFSET T=(tool) R=(offset_temp)
gcode:

    {% set user_vars = printer["gcode_macro VARIABLE"] %}   
    {% set target_tool = params.T|default(user_vars.active_tool)|int %}
    {% set target_offset = params.R|default(0)|int %}
    ###
   {% set default_heater = user_vars.default_t_extruder[target_tool] %}
    ###
    {% set act_temp = printer[default_heater].target |float %}      
           
    {% if target_offset !=0  %}  
        {% if act_temp !=0 and target_offset|abs <= 10  %} 
          {% set temp = act_temp -  user_vars.offset_temp[default_heater]  %}   
           SET_HEATER_TEMPERATURE HEATER="{default_heater}" TARGET={temp + user_vars.offset_temp[default_heater]}
        {% else %}
           RESPOND MSG=" Set temperature first or offset must be range -10 to 10 !"           
        {% endif %}      
    {% else %}
           {% set temp = act_temp - user_vars.offset_temp[default_heater]  %} 
           RESPOND MSG="Reset offset temp for "{default_heater} 
           SET_HEATER_TEMPERATURE HEATER="{default_heater}" TARGET={temp + target_offset }
    {% endif %}
            
    {% set _dummy = user_vars.offset_temp.update({default_heater: target_offset}) %}
    SET_GCODE_VARIABLE MACRO=VARIABLE VARIABLE=offset_temp VALUE="{user_vars.offset_temp}"
