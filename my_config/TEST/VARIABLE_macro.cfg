# This file contains a configuration snippet for users variables 
# for all [gcode_macro]
#
# See docs/Config_Reference.md for a description of parameters.

#####################################################################
# All variables in this configuration, KLIPPER merges
# into one configuration  file [gcode_macro VARIABLE] .
#
# ATTENTION:
# If the variable name already exists it will be overwritten!
#####################################################################

[gcode_macro VARIABLE]
description: HELP: for list of variables send GET_USER_VARIABLE
gcode:

###  ------ write all user variables under this line ------ ###

#variable_my_name : my_value 



#####################################################################
# Creating a list of variables from the 
# configuration after restarting FW Klipper 
#
#  Add macro _INIT_xxx to [delayed_gcode _INIT].
#####################################################################
 
[gcode_macro _INIT_USER_VARIABLE]          
gcode:

   {% set user_vars = printer["gcode_macro VARIABLE"] %} 
   
     ### update the variable from [save_variables] file
     ### generate variable if needed
      {% if printer.save_variables.variables.user_vars is not defined %}
        {% set default = {'restore': False} %}
         SAVE_VARIABLE VARIABLE=user_vars VALUE="{default}"
      {% else %}
      
     ### check if a restore is true
      {% if printer.save_variables.variables.user_vars.restore %}
         RESTORE_USER_VARIABLE
      {% endif %}
    {% endif %} 
   
#####################################################################
###        SAVE / RESTORE VARIABLE MANAGMENT                      ###     
#####################################################################

[gcode_macro GET_USER_VARIABLE]
description: Debug: Print entries of the printer object containing gcode_macro
gcode:
  {% set out = [] %} 
     {% for parameter, value in printer["gcode_macro VARIABLE"].items()|sort %}
        {% set _dummy = out.append("printer['gcode_macro VARIABLE'].%s = %s" % (parameter, value)) %}
      {% endfor %} 
  {action_respond_info(out|join("\n"))}

#####################################################################

[gcode_macro SAVE_USER_VARIABLE]
description: 
gcode:

  ### define the variable if needed
  {% if printer.save_variables.variables.user_vars is not defined %}
    {% set default = {'restore': False} %}
     SAVE_VARIABLE VARIABLE=user_vars  VALUE="{default}"
  {% endif %} 
 
  {% set recovery = printer.save_variables.variables.user_vars %}
  {% set _dummy = recovery.update({'restore': True}) %}
  
  ### read variable  
      {% for parameter, value in printer["gcode_macro VARIABLE"].items()|sort %}
           {% set _dummy = recovery.update({ parameter : value }) %}
      {% endfor %}  
  ### save variable to file 
   SAVE_VARIABLE VARIABLE=user_vars VALUE="{recovery}"
   
#####################################################################  

[gcode_macro RESTORE_USER_VARIABLE]
description: 
gcode:

     {% set recovery = printer.save_variables.variables %} 

     {% for variable in recovery.user_vars|sort %}  
       {% if variable != 'restore'  %}
        {% set value = recovery.user_vars[variable] %}
          SET_GCODE_VARIABLE  MACRO=VARIABLE   VARIABLE={variable}   VALUE="{value}" 
      {% endif %}
     {% endfor %} 

      {% set default = {'restore': False} %}
         SAVE_VARIABLE VARIABLE=user_vars VALUE="{default}"


# ----------------- only  for testing  SAVE / RESTORE ----------------------------  

[gcode_macro DELETE_USER_VARIABLE]
gcode:
        
     {% for variable in printer["gcode_macro VARIABLE"]|sort %}  
           SET_GCODE_VARIABLE  MACRO=VARIABLE  VARIABLE={variable}   VALUE=0
     {% endfor %} 
